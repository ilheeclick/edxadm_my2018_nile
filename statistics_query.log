[DEBUG|statistics_query.py:657] 2016-12-08 11:33:34,027 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-08 11:33:34,504 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161207';
    
[DEBUG|statistics_query.py:77] 2016-12-08 11:33:34,660 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161207' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161207'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-08 11:33:34,684 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161207'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-08 11:33:34,686 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161207'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161207') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161207') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161207'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161207'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-08 11:33:34,689 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161207'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-08 11:33:34,704 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161207'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-08 11:33:34,706 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-08 11:33:34,709 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-08 11:33:34,711 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-08 11:33:34,714 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161207'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-08 11:33:34,717 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161207'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-08 11:33:34,724 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161207'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-08 11:33:34,727 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161207'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-08 11:33:34,732 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161207'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-08 11:33:34,735 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161207'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:657] 2016-12-08 11:34:59,871 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-08 11:34:59,914 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161207';
    
[DEBUG|statistics_query.py:77] 2016-12-08 11:34:59,915 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161207' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161207'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-08 11:34:59,916 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161207'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-08 11:34:59,917 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161207'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161207') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161207') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161207'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161207'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-08 11:34:59,920 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161207'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-08 11:34:59,922 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161207'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-08 11:34:59,924 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-08 11:34:59,925 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-08 11:34:59,927 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-08 11:34:59,929 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161207'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-08 11:34:59,931 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161207'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-08 11:34:59,936 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161207'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-08 11:34:59,938 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161207'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-08 11:34:59,944 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161207'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-08 11:34:59,951 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161207'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:823] 2016-12-08 11:38:50,736 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 11:38:50,741 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 13:02:16,751 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 13:02:16,755 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 13:06:32,290 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 13:06:32,296 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 19:10:34,789 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 19:10:34,892 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 19:12:05,882 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 19:12:05,887 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 19:50:16,952 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 19:50:16,957 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 19:53:06,253 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 19:53:06,263 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 20:01:16,158 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 20:01:16,162 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:823] 2016-12-08 20:03:37,546 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-08 20:03:37,560 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:657] 2016-12-10 11:23:04,770 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-10 11:23:04,776 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161209';
    
[DEBUG|statistics_query.py:77] 2016-12-10 11:23:04,798 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-10 11:23:04,803 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-10 11:23:04,808 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161209'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161209'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161209'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-10 11:23:04,813 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161209'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-10 11:23:04,816 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161209'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-10 11:23:04,821 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-10 11:23:04,824 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-10 11:23:04,827 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-10 11:23:04,830 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-10 11:23:04,832 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161209'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-10 11:23:04,835 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-10 11:23:04,837 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161209'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-10 11:23:04,840 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-10 11:23:04,843 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161209'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:823] 2016-12-10 11:23:26,809 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-10 11:23:26,812 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:657] 2016-12-10 11:23:34,219 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-10 11:23:34,225 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161209';
    
[DEBUG|statistics_query.py:77] 2016-12-10 11:23:34,229 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-10 11:23:34,233 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-10 11:23:34,236 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161209'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161209'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161209'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-10 11:23:34,241 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161209'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-10 11:23:34,243 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161209'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-10 11:23:34,248 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-10 11:23:34,249 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-10 11:23:34,261 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-10 11:23:34,274 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-10 11:23:34,275 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161209'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-10 11:23:34,278 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-10 11:23:34,279 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161209'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-10 11:23:34,282 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-10 11:23:34,283 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161209'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:657] 2016-12-10 11:25:10,026 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-10 11:25:10,033 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161207';
    
[DEBUG|statistics_query.py:77] 2016-12-10 11:25:10,037 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161207' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161207'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-10 11:25:10,037 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161207'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-10 11:25:10,038 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161207') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161207'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161207') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161207') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161207'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161207'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-10 11:25:10,040 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161207'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-10 11:25:10,042 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161207'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-10 11:25:10,043 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-10 11:25:10,045 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-10 11:25:10,046 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161207') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-10 11:25:10,048 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161207'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-10 11:25:10,049 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161207'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-10 11:25:10,051 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161207'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-10 11:25:10,052 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161207'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-10 11:25:10,054 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161207'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-10 11:25:10,057 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161207'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:657] 2016-12-10 11:25:55,400 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-10 11:25:55,404 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161205' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161205';
    
[DEBUG|statistics_query.py:77] 2016-12-10 11:25:55,408 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161205' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161205'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-10 11:25:55,409 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161205'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-10 11:25:55,410 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161205') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161205') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161205'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161205') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161205') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161205'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161205'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-10 11:25:55,412 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161205'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-10 11:25:55,413 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161205'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-10 11:25:55,415 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161205') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-10 11:25:55,416 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161205') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-10 11:25:55,418 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161205') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-10 11:25:55,420 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161205'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-10 11:25:55,421 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161205'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-10 11:25:55,424 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161205'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-10 11:25:55,425 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161205'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-10 11:25:55,427 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161205'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-10 11:25:55,429 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161205'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:657] 2016-12-10 11:27:35,894 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-10 11:27:35,899 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161205' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161205';
    
[DEBUG|statistics_query.py:77] 2016-12-10 11:27:35,903 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161205' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161205'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-10 11:27:35,907 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161205'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-10 11:27:35,910 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161205') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161205') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161205'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161205') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161205') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161205'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161205'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-10 11:27:35,913 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161205'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-10 11:27:35,915 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161205'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-10 11:27:35,916 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161205') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-10 11:27:35,917 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161205') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-10 11:27:35,919 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161205') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-10 11:27:35,920 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161205'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-10 11:27:35,921 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161205'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-10 11:27:35,924 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161205'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-10 11:27:35,925 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161205'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-10 11:27:35,927 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161205'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-10 11:27:35,930 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161205'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:657] 2016-12-10 12:14:57,393 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-10 12:14:57,550 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161209';
    
[DEBUG|statistics_query.py:77] 2016-12-10 12:14:57,656 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-10 12:14:57,681 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-10 12:14:57,682 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161209'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161209'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161209'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-10 12:14:57,687 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161209'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-10 12:14:57,702 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161209'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-10 12:14:57,704 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-10 12:14:57,705 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-10 12:14:57,707 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-10 12:14:57,709 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-10 12:14:57,711 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161209'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-10 12:14:57,716 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-10 12:14:57,718 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161209'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-10 12:14:57,723 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-10 12:14:57,726 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161209'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:823] 2016-12-10 12:15:05,082 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-10 12:15:05,086 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:657] 2016-12-10 13:38:00,876 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-10 13:38:01,365 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161209';
    
[DEBUG|statistics_query.py:77] 2016-12-10 13:38:01,824 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161209' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-10 13:38:03,131 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161209'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-10 13:38:03,714 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161209'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161209') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161209'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161209'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-10 13:38:06,083 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161209'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-10 13:38:06,396 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161209'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-10 13:38:06,688 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-10 13:38:06,905 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-10 13:38:07,169 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161209') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-10 13:38:07,493 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-10 13:38:08,055 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161209'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-10 13:38:08,631 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-10 13:38:09,390 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161209'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-10 13:38:11,467 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161209'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-10 13:38:15,512 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161209'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:823] 2016-12-10 13:38:29,086 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113';
    
[DEBUG|statistics_query.py:842] 2016-12-10 13:38:29,317 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161113'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
[DEBUG|statistics_query.py:657] 2016-12-28 10:29:14,672 > 
        SELECT DISTINCT a.course_id
          FROM course_structures_coursestructure a, student_courseaccessrole b
         WHERE     a.course_id = b.course_id
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:54] 2016-12-28 10:29:14,788 > 
      SELECT sum(if(date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161201' ,1,0)) newcnt,
                       sum(if(b.email LIKE 'delete_%', 0, 1)) cnt,
                       count(b.id) allcnt
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014' AND '20161201';
    
[DEBUG|statistics_query.py:77] 2016-12-28 10:29:14,812 > 
        SELECT sum(if(date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') = '20161201' and a.is_active = 1, 1, 0)) newcnt,
               count(a.user_id) allcnt,
               sum(if(a.is_active = 1, 1, 0)) cnt,
               count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161201'
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:99] 2016-12-28 10:29:14,833 > 
        SELECT count(DISTINCT a.user_id) distcnt
          FROM student_courseenrollment a, auth_user b
         WHERE     a.user_id = b.id
               AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1' AND '20161201'
               AND a.is_active = 1
               AND lower(a.course_id) NOT LIKE '%test%'
               AND lower(a.course_id) NOT LIKE '%demo%'
               AND lower(a.course_id) NOT LIKE '%nile%';
    
[DEBUG|statistics_query.py:154] 2016-12-28 10:29:14,834 > 
        SELECT 1                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161201') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') = '20161201') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') =
                      '20161201'
        UNION ALL
        SELECT 2                                              gubn,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email not like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161201') is_secession,
               (select count(*) from auth_user a, auth_userprofile b where a.id = b.user_id and email like 'delete_%' and date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') between '20151014' and '20161201') no_secession,
               count(if(c.is_active = 1, a.id, NULL))         is_active,
               count(if(c.is_active = 1, NULL, a.id))         no_active
          FROM auth_user a, auth_userprofile b, student_courseenrollment c
         WHERE     a.id = b.user_id
               AND a.id = c.user_id
               AND lower(c.course_id) NOT LIKE '%test%'
               AND lower(c.course_id) NOT LIKE '%demo%'
               AND lower(c.course_id) NOT LIKE '%nile%'
               AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                  AND '20161201'
        UNION ALL
          SELECT 3                                                     gubn,
                 0 is_secession,
                 0 no_secession,
                 count(DISTINCT if(c.is_active = 1, a.id, NULL))       is_active,
                 count(DISTINCT if(c.is_active = 1, NULL, a.id))       no_active
            FROM auth_user a, auth_userprofile b, student_courseenrollment c
           WHERE     a.id = b.user_id
                 AND a.id = c.user_id
                 AND lower(c.course_id) NOT LIKE '%test%'
                 AND lower(c.course_id) NOT LIKE '%demo%'
                 AND lower(c.course_id) NOT LIKE '%nile%'
                 AND date_format(adddate(c.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                    AND '20161201'
        ORDER BY gubn
    
[DEBUG|statistics_query.py:218] 2016-12-28 10:29:14,837 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       sum(if(a.gender = 'm', 1, 0)) AS "male",
                       sum(if(a.gender = 'f', 1, 0)) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') = '20161201'
                GROUP BY CASE
                            WHEN    a.level_of_education IS NULL
                                 OR a.level_of_education = ''
                                 OR a.level_of_education = 'null'
                            THEN
                               'none'
                            ELSE
                               level_of_education
                         END
                ORDER BY level_of_education) b
                  ON a.r = b.result
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:274] 2016-12-28 10:29:14,839 > 
        SELECT sum(b.male), sum(b.female)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 9) a
               LEFT OUTER JOIN
               (SELECT CASE
                          WHEN a.level_of_education = 'p'
                          THEN
                             1
                          WHEN a.level_of_education = 'm'
                          THEN
                             2
                          WHEN a.level_of_education = 'b'
                          THEN
                             3
                          WHEN a.level_of_education = 'a'
                          THEN
                             4
                          WHEN a.level_of_education = 'hs'
                          THEN
                             5
                          WHEN a.level_of_education = 'jhs'
                          THEN
                             6
                          WHEN a.level_of_education = 'el'
                          THEN
                             7
                          WHEN a.level_of_education = 'other'
                          THEN
                             8
                          else
                             9
                       END
                          result,
                       if(a.gender = 'm', 1, 0) AS "male",
                       if(a.gender = 'f', 1, 0) AS "female"
                  FROM auth_userprofile a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(b.date_joined, INTERVAL 9 HOUR),'%Y%m%d') BETWEEN '20151014' AND '20161201'
                ) b
                  ON a.r = b.result
        group by a.r
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:318] 2016-12-28 10:29:14,841 > 
        SELECT ifnull(b.male, 0), ifnull(b.female, 0)
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') = '20161201') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:363] 2016-12-28 10:29:14,854 > 
        SELECT b.male, b.female
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       count(CASE WHEN gender = 'm' THEN 1 END) male,
                       count(CASE WHEN gender = 'f' THEN 1 END) female
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161201') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:439] 2016-12-28 10:29:14,856 > 
        SELECT b.aa,
               b.bb,
               b.cc,
               b.dd,
               b.ee,
               b.ff,
               b.gg,
               b.hh,
               b.ii
          FROM (SELECT (@rn := @rn + 1) r
                  FROM auth_user a, (SELECT @rn := 0) b
                 LIMIT 7) a
               LEFT OUTER JOIN
               (SELECT age,
                       sum(CASE WHEN lv = 'p' THEN 1 ELSE 0 END) aa,
                       sum(CASE WHEN lv = 'm' THEN 1 ELSE 0 END) bb,
                       sum(CASE WHEN lv = 'b' THEN 1 ELSE 0 END) cc,
                       sum(CASE WHEN lv = 'a' THEN 1 ELSE 0 END) dd,
                       sum(CASE WHEN lv = 'hs' THEN 1 ELSE 0 END) ee,
                       sum(CASE WHEN lv = 'jhs' THEN 1 ELSE 0 END) ff,
                       sum(CASE WHEN lv = 'el' THEN 1 ELSE 0 END) gg,
                       sum(CASE WHEN lv = 'other' THEN 1 ELSE 0 END) hh,
                       sum(CASE
                              WHEN lv NOT IN ('p',
                                              'm',
                                              'b',
                                              'a',
                                              'hs',
                                              'jhs',
                                              'el',
                                              'other')
                              THEN
                                 1
                              ELSE
                                 0
                           END)
                          ii
                  FROM (SELECT CASE
                                  WHEN age < 20 THEN '1'
                                  WHEN age BETWEEN 20 AND 29 THEN '2'
                                  WHEN age BETWEEN 30 AND 39 THEN '3'
                                  WHEN age BETWEEN 40 AND 49 THEN '4'
                                  WHEN age BETWEEN 50 AND 59 THEN '5'
                                  WHEN age >= 60 THEN '6'
                                  ELSE '7'
                               END
                                  age,
                               lv,
                               gender
                          FROM (SELECT   (date_format(now(), '%Y') - a.year_of_birth)
                                       + 1
                                          age,
                                       ifnull(a.level_of_education, '') lv,
                                       a.gender
                                  FROM auth_userprofile a, auth_user b
                                 WHERE     a.user_id = b.id
                                       AND date_format(
                                              adddate(b.date_joined, INTERVAL 9 HOUR),
                                              '%Y%m%d') BETWEEN '20151014'
                                                            AND '20161201') aa) bb
                GROUP BY age) b
                  ON a.r = b.age
        ORDER BY a.r;
    
[DEBUG|statistics_query.py:478] 2016-12-28 10:29:14,859 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt
                  FROM (SELECT a.course_id, count(*) cnt
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') = '20161201'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:701] 2016-12-28 10:29:14,860 > 
        SELECT a.org, count(b.org) cnt
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') =
                              '20161201'
                       AND a.is_active = 1
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:518] 2016-12-28 10:29:14,865 > 
        SELECT a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               ifnull(cnt, 0),
               ifnull(cnt2, 0)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id, cnt, cnt2
                  FROM (SELECT a.course_id, count(*) cnt, sum(if(a.is_active = 1, 1, 0)) cnt2
                          FROM student_courseenrollment a, auth_user b
                         WHERE     a.user_id = b.id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161201'
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%'
                        GROUP BY a.course_id) aa) b
                  ON a.course_id = b.course_id;
    
[DEBUG|statistics_query.py:745] 2016-12-28 10:29:14,867 > 
        SELECT a.org, count(b.org) cnt, sum(b.is_active) cnt2
          FROM (SELECT DISTINCT
                       substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     1 = 1
                       AND a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%'
                GROUP BY a.course_id) a
               LEFT JOIN
               (SELECT substring(
                          a.course_id,
                          instr(a.course_id, ':') + 1,
                          (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                          org, a.is_active
                  FROM student_courseenrollment a, auth_user b
                 WHERE     a.user_id = b.id
                       AND date_format(adddate(a.created, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '1'
                                                                                          AND '20161201'
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') b
                  ON a.org = b.org
        GROUP BY a.org
        ORDER BY a.org;
    
[DEBUG|statistics_query.py:572] 2016-12-28 10:29:14,870 > 
        SELECT substring(a.course_id,
                         instr(a.course_id, ':') + 1,
                         (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                  org,
               a.course_id,
               substring(substring_index(a.course_id, '+', 2),
                         instr(a.course_id, '+') + 1)
                  course_id1,
               substring_index(a.course_id, '+', -1) course_id2,
               sum(if(age < 20, 1, 0)),
               sum(if(age BETWEEN 20 AND 29, 1, 0)),
               sum(if(age BETWEEN 30 AND 39, 1, 0)),
               sum(if(age BETWEEN 40 AND 49, 1, 0)),
               sum(if(age BETWEEN 50 AND 59, 1, 0)),
               sum(if(age >= 60, 1, 0)),
               count(age)
          FROM (SELECT DISTINCT a.course_id
                  FROM course_structures_coursestructure a,
                       student_courseaccessrole b
                 WHERE     a.course_id = b.course_id
                       AND lower(a.course_id) NOT LIKE '%test%'
                       AND lower(a.course_id) NOT LIKE '%demo%'
                       AND lower(a.course_id) NOT LIKE '%nile%') a
               LEFT JOIN
               (SELECT course_id,
                       ifnull((date_format(NOW(), '%Y') - year_of_birth), 0) + 1 age
                  FROM (SELECT a.course_id, c.year_of_birth
                          FROM student_courseenrollment a,
                               auth_user b,
                               auth_userprofile c
                         WHERE     a.user_id = b.id
                               AND b.id = c.user_id
                               AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                               '%Y%m%d') BETWEEN '1'
                                                             AND '20161201'
                               AND a.is_active = 1
                               AND lower(a.course_id) NOT LIKE '%test%'
                               AND lower(a.course_id) NOT LIKE '%demo%'
                               AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                  ON a.course_id = b.course_id
        GROUP BY a.course_id;
    
[DEBUG|statistics_query.py:638] 2016-12-28 10:29:14,873 > 
        SELECT substring(a.course_id,
                           instr(a.course_id, ':') + 1,
                           (instr(a.course_id, '+')) - instr(a.course_id, ':') - 1)
                    org,
                 a.course_id,
                 substring(substring_index(a.course_id, '+', 2),
                           instr(a.course_id, '+') + 1)
                    course_id1,
                 substring_index(a.course_id, '+', -1) course_id2,
                 sum(if(level_of_education = 'p', 1, 0)),
                 sum(if(level_of_education = 'm', 1, 0)),
                 sum(if(level_of_education = 'b', 1, 0)),
                 sum(if(level_of_education = 'a', 1, 0)),
                 sum(if(level_of_education = 'hs', 1, 0)),
                 sum(if(level_of_education = 'jhs', 1, 0)),
                 sum(if(level_of_education = 'el', 1, 0)),
                 sum(if(level_of_education = 'other', 1, 0)),
                 sum(if(level_of_education NOT IN ('p',
                                                               'm',
                                                               'b',
                                                               'a',
                                                               'hs',
                                                               'jhs',
                                                               'el',
                                                               'other'),
                        1,
                        0)),
                 count(level_of_education)
            FROM (SELECT DISTINCT a.course_id
                    FROM course_structures_coursestructure a,
                         student_courseaccessrole        b
                   WHERE     a.course_id = b.course_id
                         AND lower(a.course_id) NOT LIKE '%test%'
                         AND lower(a.course_id) NOT LIKE '%demo%'
                         AND lower(a.course_id) NOT LIKE '%nile%') a
                 LEFT JOIN
                 (SELECT course_id, ifnull(level_of_education, '') level_of_education
                    FROM (SELECT a.course_id, c.level_of_education
                            FROM student_courseenrollment a,
                                 auth_user              b,
                                 auth_userprofile       c
                           WHERE     a.user_id = b.id
                                 AND b.id = c.user_id
                                 AND date_format(adddate(a.created, INTERVAL 9 HOUR),
                                                 '%Y%m%d') BETWEEN '1'
                                                               AND '20161201'
                                 AND a.is_active = 1
                                 AND lower(a.course_id) NOT LIKE '%test%'
                                 AND lower(a.course_id) NOT LIKE '%demo%'
                                 AND lower(a.course_id) NOT LIKE '%nile%') aa) b
                    ON a.course_id = b.course_id
        GROUP BY a.course_id
        ORDER BY a.course_id;
    
[DEBUG|statistics_query.py:823] 2016-12-28 10:29:56,382 > 
        SELECT sum(if(a.is_active = '1', 1, 0)) active,
               sum(if(a.is_active = '1', 0, 1)) unactive,
               count(*)
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161213';
    
[DEBUG|statistics_query.py:842] 2016-12-28 10:29:56,386 > 
        SELECT b.country, count(*) cnt
          FROM auth_user a, auth_userprofile b
         WHERE     a.id = b.user_id
               AND date_format(adddate(a.date_joined, INTERVAL 9 HOUR), '%Y%m%d') BETWEEN '20151014'
                                                                                      AND '20161213'
        GROUP BY b.country
        ORDER BY count(*) DESC;
    
